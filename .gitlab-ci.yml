stages:
    - test
    - build
    - deploy

test:
    image: node:17-alpine
    stage: test
    tags: 
        - test
    script:
        - npm install
        - npm test
        - npm run build
    artifacts:
        paths: 
            - build/*

build:
    image: docker:20.10.16
    stage: build
    tags:
        - build
    services:
        - docker:20.10.16-dind
    before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    script:
        - docker build --pull -t "$CI_REGISTRY_IMAGE" .
        - docker push "$CI_REGISTRY_IMAGE"


deploy:
    tags:
        - build
    image: alpine:latest
    stage: deploy
    before_script:
        - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
        - ssh-keyscan $IP_ADRESS >> ~/.ssh/known_hosts
        - chmod 644 ~/.ssh/known_hosts
        - yum install rsync
    script:
        - ls build
        - $ scp -r ./build root@188.34.147.227:/root/

    artifacts:
        paths:
            - public
   


